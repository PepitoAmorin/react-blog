{"version":3,"sources":["Navbar.jsx","useFetch.jsx","PostList.jsx","Home.jsx","Create.jsx","PostDetails.js","404.jsx","App.jsx","index.js"],"names":["Navbar","className","to","useFetch","url","useState","data","setData","loading","setLoading","error","setError","useEffect","abortController","AbortController","setTimeout","fetch","signal","then","response","ok","Error","json","catch","name","message","abort","PostList","posts","title","map","post","id","author","Home","Create","setTitle","body","setBody","setAuthor","posting","setPosting","hist","useHistory","onSubmit","e","preventDefault","postObject","method","headers","JSON","stringify","push","type","required","value","onChange","target","disabled","hidden","PostDetails","useParams","fetchUrl","onClick","FourOhFour","App","basename","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6b8aea0e.chunk.js","sourcesContent":["import { Link } from 'react-router-dom'; \n\nconst Navbar = () => {\n  return (\n    <div className='navbar'> \n      <h1>Blog title</h1>\n      <div className=\"links\">\n        <Link to=\"/\">Home</Link>\n        <Link to=\"/create/\">New post</Link>\n      </div>\n      \n    </div>\n  )\n}\n\nexport { Navbar } \n","import { useState, useEffect } from 'react'; \n\nconst useFetch = (url) => {\n  const [data, setData] = useState(null); \n  const [loading, setLoading] = useState(true); \n  const [error, setError] = useState(null); \n\n  useEffect(() => { \n    const abortController = new AbortController(); \n\n    setTimeout(() => {\n      fetch(url, { signal: abortController.signal }) \n        .then(response => {  \n          if (!response.ok) {\n            throw Error(`Posts can't be fetched, please reload.`)\n          }\n          return response.json(); \n        })\n        .then(data => {\n          setData(data); \n          setLoading(false); \n          setError(null); \n        }) \n        .catch(error => {\n          if (error.name === 'AbortError') {\n\n          } else {\n            setError(error.message); \n          setLoading(false);\n          }\n           \n        }) \n    }, 500); \n    \n    return () => abortController.abort();  \n     \n\n  }, [url]); \n\n  return { data, loading, error }; \n} \n\nexport { useFetch }; ","import { Link } from 'react-router-dom'; \n\nconst PostList = ({ posts, title }) => { \n  return ( \n    <div className='post-list'> \n      <h2>{ title }</h2>\n      {posts.map(post => (\n        <div className=\"post-preview\" key={post.id}> \n          <Link to={`/post/${post.id}`}> \n            <h2>{ post.title }</h2>\n            <p>By { post.author }</p>\n          </Link> \n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport { PostList }; \n","import { useFetch } from './useFetch'; \nimport { PostList } from './PostList'; \n\n\nconst fetchUrl = 'http://localhost:8000/posts'; \n\nconst Home = () => {  \n  const { data: posts, loading, error } = useFetch(fetchUrl);  \n  \n  return (\n    <div className='home'> \n      {error && <p>{ error }</p>}\n      {loading && <p>Loading...</p>}\n      {posts && <PostList posts={ posts } title='All posts'/>} \n    </div>\n  )\n}\n\nexport { Home }; ","import { useState } from 'react'; \nimport { useHistory } from 'react-router-dom'; \n\nconst fetchUrl = 'http://localhost:8000/posts'; \n\n \n\nconst Create = () => { \n  const [title, setTitle] = useState(''); \n  const [body, setBody] = useState(''); \n  const [author, setAuthor] = useState('none'); \n  const [posting, setPosting] = useState(false); \n  const hist = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault(); \n    const postObject = { title, body, author }; \n    setPosting(true); \n\n    fetch(fetchUrl, {\n      method: 'POST', \n      headers: {\"Content-Type\": \"application/json\"}, \n      body: JSON.stringify(postObject)\n    }).then(() => {\n      setPosting(false); \n      hist.push('/'); \n    }) \n  }\n\n  return (\n    <div className='create'>\n      <h2>Add a new post! </h2> \n      <form onSubmit={ handleSubmit }>\n        <label>Title: </label> \n        <input \n          type=\"text\" \n          required  \n          value={ title } \n          onChange={(e) => setTitle(e.target.value)}\n        /> \n        <label>Body: </label> \n        <textarea \n          required \n          value={ body } \n          onChange={(e) => setBody(e.target.value)}\n        >\n        </textarea> \n        <label>Author: </label> \n        <select \n          value={ author } \n          onChange={(e) => setAuthor(e.target.value)}\n        > \n          <option value=\"none\" disabled hidden>Select an author</option>\n          <option value=\"Juan Carlos\">Juan Carlos</option> \n          <option value=\"Alberto\">Alberto</option> \n          <option value=\"Federico\">Federico</option>\n        </select> \n        {!posting && <button>Add post</button>}\n        {posting && <button disabled>Posting to your blog!</button>}\n      </form> \n      <p>{ title }</p>\n      <p>{ body }</p>\n      <p>Author: { author }</p>\n    </div>\n  )\n}\n\nexport { Create }; \n","import { useHistory, useParams } from \"react-router\"; \nimport { useFetch } from './useFetch'; \n\n\nconst PostDetails = () => { \n  const { id } = useParams();  \n  const fetchUrl = `http://localhost:8000/posts/${id}`;\n  const { data: posts, loading, error } = useFetch(fetchUrl); \n  const hist = useHistory(); \n\n  const handleDelete = () => {\n    fetch(fetchUrl, {\n      method: 'DELETE' \n    }).then(() => {\n      hist.push('/'); \n    }) \n  } \n  \n  return ( \n\n    <div className='post-details'> \n      {error && <p>{ error }</p>}\n      {loading && <p>Loading...</p>} \n      { posts && ( \n        <article>\n          <h2>{ posts.title}</h2> \n          <h3>By { posts.author }</h3>\n          <p>{ posts.body } </p> \n          <button onClick={ handleDelete }>Delete post</button>\n        </article>\n      )}\n      \n    </div>\n  )\n}\n\nexport { PostDetails };  \n\n","import { Link } from \"react-router-dom\"\n\nconst FourOhFour = () => {\n  return (\n    <div className=\"four-oh-four\">\n      <h2>Page not found</h2> \n      <p>Sorry, we cant find the page you're looking for. Try the \n        <Link to='/react-blog/'> Home Page</Link>. \n      </p>\n    </div>\n  )\n} \n\nexport { FourOhFour }; ","import { Navbar } from './Navbar';  \nimport { Home } from './Home'; \nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'; \nimport { Create } from './Create';\nimport { PostDetails } from './PostDetails';\nimport { FourOhFour } from './404';\n\nfunction App() {\n  return (\n    <Router basename='/react-blog'>\n      <div className=\"App\"> \n        <Navbar />\n        <div className=\"content\"> \n          <Switch>\n            <Route exact path='/'>\n              <Home /> \n            </Route> \n            <Route exact path='/create'>\n              <Create /> \n            </Route>\n            <Route exact path='/post/:id'>\n              <PostDetails /> \n            </Route>\n            <Route exact path='/'>\n              <Home /> \n            </Route>\n            <Route path='*'>\n              <FourOhFour />\n            </Route>\n          </Switch> \n        </div>\n    </div>\n    </Router>\n  );\n}\n\nexport { App };\n","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport './index.css';\nimport { App } from './App';\n\n\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  ,\n  document.getElementById('root')\n); \n"],"sourceRoot":""}